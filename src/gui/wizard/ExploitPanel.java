package gui.wizard;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.Box;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;

import gui.SequencePanel;
import gui.SwitchFrame;
import gui.TransparentTextArea;

public class ExploitPanel extends SequencePanel {

	private static final long serialVersionUID = 342824407345622200L;
	JCheckBox letterBomb;
	JComboBox game;
	public ExploitPanel(SequencePanel last, SwitchFrame parent) {
		super(last, parent);
		if(parent.getData("firmware").equals("4.3")) {
			add(new TransparentTextArea(textAreas.getString("letterBomb")));
			letterBomb = new JCheckBox("LetterBomb");
			add(letterBomb);
			letterBomb.addActionListener(new ActionListener() {
				
				@Override
				public void actionPerformed(ActionEvent e) {
					if(letterBomb.isSelected())
						game.setEnabled(false);
					else
						game.setEnabled(true);
				}
			});
		}
		add(Box.createVerticalStrut(30));
		add(new TransparentTextArea(textAreas.getString("exploit4_3pt2")));
		String[] games;
		if(parent.getData("firmware").equals("O"))
			if(!parent.getData("region").equals("K"))
				games = new String[] {"Super Smash Bros. Brawl", "Lego Indiana Jones", "Lego Batman", "Lego Star Wars", "Yu-Gi-Oh! 5D's", "Tales of Symphonia: Dawn of the New World", "Zelda: Twilight Princess", menuItems.getString("notSureDLAll")};
			else
				games = new String[] {"Super Smash Bros. Brawl", "Zelda: Twilight Princess"};
		else if(!parent.getData("region").equals("K"))
			games = new String[] {"Super Smash Bros. Brawl", "Lego Indiana Jones", "Lego Batman", "Lego Star Wars", "Yu-Gi-Oh! 5D's", "Tales of Symphonia: Dawn of the New World", menuItems.getString("notSureDLAll")};	
		else
			games = new String[] {"Super Smash Bros. Brawl"};
		game = new JComboBox(games);
		add(game);
		if(!parent.getData("firmware").equals("4.3")) {
			add(Box.createVerticalStrut(20));
			add(new TransparentTextArea(textAreas.getString("upgrade")));
		}
		addNextButton();
	}

	@Override
	public SequencePanel getNextPanel() {
		if(letterBomb.isSelected()) {
			parent.feedCollector("exploit", "BOMB");
			return new LetterBombPanel(this, parent);
		}
		else {
			switch(game.getSelectedIndex()) {
			case 0:
				parent.feedCollector("exploit", "SmashStack");
				break;
			case 1:
				parent.feedCollector("exploit", "IndianaPwns");
				break;
			case 2:
				parent.feedCollector("exploit", "Bathaxx");
				break;
			case 3:
				parent.feedCollector("exploit", "ROTJ");
				break;
			case 4:
				parent.feedCollector("exploit", "YuGiOwned");
				break;
			case 5:
				parent.feedCollector("exploit", "EriHakawai");
				break;
			case 6:
				if(parent.getData("firmware").equals("O"))
					parent.feedCollector("exploit", "Twilight");
				else
					parent.feedCollector("exploit", "AllExploits");
				break;
			case 7:
				parent.feedCollector("exploit", "AllExploits");
				break;
			}
			return new ActiveIOSs(this, parent);
		}
		
	}

	@Override
	protected String getInfo() {
		return null;
	}

	@Override
	protected String getTitle() {
		return "exploit";
	}

}
